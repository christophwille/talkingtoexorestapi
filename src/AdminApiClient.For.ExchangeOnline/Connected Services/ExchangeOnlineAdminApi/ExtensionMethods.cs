//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 1/31/2023 2:36:10 PM
namespace AdminApiClient.For.ExchangeOnline.OData
{
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.BasicInfo as global::AdminApiClient.For.ExchangeOnline.OData.BasicInfoSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.BasicInfoSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.BasicInfo> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.BasicInfoSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.BasicInfo as global::AdminApiClient.For.ExchangeOnline.OData.BasicInfoSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="propertyName">The value of propertyName</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.BasicInfoSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.BasicInfo> _source,
            string propertyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PropertyName", propertyName }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.BasicInfoSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxPermission as global::AdminApiClient.For.ExchangeOnline.OData.MailboxPermissionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxPermissionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxPermission> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxPermissionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxPermission as global::AdminApiClient.For.ExchangeOnline.OData.MailboxPermissionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="permissionId">The value of permissionId</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxPermissionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxPermission> _source,
            string permissionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PermissionId", permissionId }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxPermissionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderPermission as global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderPermissionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderPermissionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderPermission> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderPermissionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderPermission as global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderPermissionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderPermissionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderPermission> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderPermissionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolder as global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolder> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolder as global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolder> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxRegionalConfiguration as global::AdminApiClient.For.ExchangeOnline.OData.MailboxRegionalConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxRegionalConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxRegionalConfiguration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxRegionalConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxRegionalConfiguration as global::AdminApiClient.For.ExchangeOnline.OData.MailboxRegionalConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxRegionalConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxRegionalConfiguration> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxRegionalConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MobileDevice as global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MobileDevice> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MobileDevice as global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MobileDevice> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItem as global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItem> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItem as global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="entryID">The value of entryID</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItem> _source,
            string entryID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EntryID", entryID }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.Mailbox as global::AdminApiClient.For.ExchangeOnline.OData.MailboxSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Mailbox> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.Mailbox as global::AdminApiClient.For.ExchangeOnline.OData.MailboxSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="objectKey">The value of objectKey</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Mailbox> _source,
            string objectKey)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ObjectKey", objectKey }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxAutoReplyConfiguration as global::AdminApiClient.For.ExchangeOnline.OData.MailboxAutoReplyConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxAutoReplyConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxAutoReplyConfiguration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxAutoReplyConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxAutoReplyConfiguration as global::AdminApiClient.For.ExchangeOnline.OData.MailboxAutoReplyConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxAutoReplyConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxAutoReplyConfiguration> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxAutoReplyConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxPlan as global::AdminApiClient.For.ExchangeOnline.OData.MailboxPlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxPlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxPlan> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxPlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MailboxPlan as global::AdminApiClient.For.ExchangeOnline.OData.MailboxPlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MailboxPlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxPlan> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.MailboxPlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.CasMailbox as global::AdminApiClient.For.ExchangeOnline.OData.CasMailboxSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.CasMailboxSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.CasMailbox> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.CasMailboxSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.CasMailbox as global::AdminApiClient.For.ExchangeOnline.OData.CasMailboxSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="objectKey">The value of objectKey</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.CasMailboxSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.CasMailbox> _source,
            string objectKey)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ObjectKey", objectKey }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.CasMailboxSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.RecipientPermission as global::AdminApiClient.For.ExchangeOnline.OData.RecipientPermissionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.RecipientPermissionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.RecipientPermission> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.RecipientPermissionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.RecipientPermission as global::AdminApiClient.For.ExchangeOnline.OData.RecipientPermissionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="trustee">The value of trustee</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.RecipientPermissionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.RecipientPermission> _source,
            string trustee)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Trustee", trustee }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.RecipientPermissionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.Recipient as global::AdminApiClient.For.ExchangeOnline.OData.RecipientSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.RecipientSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Recipient> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.RecipientSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.Recipient as global::AdminApiClient.For.ExchangeOnline.OData.RecipientSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="objectKey">The value of objectKey</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.RecipientSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Recipient> _source,
            string objectKey)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ObjectKey", objectKey }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.RecipientSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.RetentionPolicy as global::AdminApiClient.For.ExchangeOnline.OData.RetentionPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.RetentionPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.RetentionPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.RetentionPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.RetentionPolicy as global::AdminApiClient.For.ExchangeOnline.OData.RetentionPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.RetentionPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.RetentionPolicy> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.RetentionPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentPolicy as global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentPolicy as global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentPolicy> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.AddressBookPolicy as global::AdminApiClient.For.ExchangeOnline.OData.AddressBookPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.AddressBookPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.AddressBookPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.AddressBookPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.AddressBookPolicy as global::AdminApiClient.For.ExchangeOnline.OData.AddressBookPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.AddressBookPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.AddressBookPolicy> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.AddressBookPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.SharingPolicy as global::AdminApiClient.For.ExchangeOnline.OData.SharingPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.SharingPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.SharingPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.SharingPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.SharingPolicy as global::AdminApiClient.For.ExchangeOnline.OData.SharingPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.SharingPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.SharingPolicy> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.SharingPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.User as global::AdminApiClient.For.ExchangeOnline.OData.UserSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.UserSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.User> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.UserSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.User as global::AdminApiClient.For.ExchangeOnline.OData.UserSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="externalDirectoryObjectId">The value of externalDirectoryObjectId</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.UserSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.User> _source,
            string externalDirectoryObjectId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ExternalDirectoryObjectId", externalDirectoryObjectId }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.UserSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnector as global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnectorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnectorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnector> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnectorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnector as global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnectorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnectorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnector> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnectorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.InboundConnector as global::AdminApiClient.For.ExchangeOnline.OData.InboundConnectorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.InboundConnectorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.InboundConnector> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.InboundConnectorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.InboundConnector as global::AdminApiClient.For.ExchangeOnline.OData.InboundConnectorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.InboundConnectorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.InboundConnector> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.InboundConnectorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.HistoricalSearch as global::AdminApiClient.For.ExchangeOnline.OData.HistoricalSearchSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.HistoricalSearchSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.HistoricalSearch> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.HistoricalSearchSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.HistoricalSearch as global::AdminApiClient.For.ExchangeOnline.OData.HistoricalSearchSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobId">The value of jobId</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.HistoricalSearchSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.HistoricalSearch> _source,
            string jobId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobId", jobId }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.HistoricalSearchSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ReportSchedule as global::AdminApiClient.For.ExchangeOnline.OData.ReportScheduleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ReportScheduleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ReportSchedule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.ReportScheduleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ReportSchedule as global::AdminApiClient.For.ExchangeOnline.OData.ReportScheduleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="scheduleId">The value of scheduleId</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ReportScheduleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ReportSchedule> _source,
            string scheduleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ScheduleId", scheduleId }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.ReportScheduleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.CalendarProcessing as global::AdminApiClient.For.ExchangeOnline.OData.CalendarProcessingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.CalendarProcessingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.CalendarProcessing> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.CalendarProcessingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.CalendarProcessing as global::AdminApiClient.For.ExchangeOnline.OData.CalendarProcessingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.CalendarProcessingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.CalendarProcessing> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.CalendarProcessingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.CmdletInfo as global::AdminApiClient.For.ExchangeOnline.OData.CmdletInfoSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.CmdletInfoSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.CmdletInfo> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.CmdletInfoSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.CmdletInfo as global::AdminApiClient.For.ExchangeOnline.OData.CmdletInfoSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="cmdletName">The value of cmdletName</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.CmdletInfoSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.CmdletInfo> _source,
            string cmdletName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CmdletName", cmdletName }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.CmdletInfoSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.Place as global::AdminApiClient.For.ExchangeOnline.OData.PlaceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.PlaceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Place> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.PlaceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.Place as global::AdminApiClient.For.ExchangeOnline.OData.PlaceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.PlaceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Place> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.PlaceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.RoleDefinitions as global::AdminApiClient.For.ExchangeOnline.OData.RoleDefinitionsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.RoleDefinitionsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.RoleDefinitions> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.RoleDefinitionsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.RoleDefinitions as global::AdminApiClient.For.ExchangeOnline.OData.RoleDefinitionsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.RoleDefinitionsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.RoleDefinitions> _source,
            string id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "id", id }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.RoleDefinitionsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupMember as global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupMemberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupMemberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupMember> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupMemberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupMember as global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupMemberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupMemberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupMember> _source,
            string id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "id", id }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupMemberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroup as global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroup as global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroup> _source,
            string id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "id", id }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.ExchangeRoleGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ExchangeManagementScope as global::AdminApiClient.For.ExchangeOnline.OData.ExchangeManagementScopeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ExchangeManagementScopeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ExchangeManagementScope> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.ExchangeManagementScopeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ExchangeManagementScope as global::AdminApiClient.For.ExchangeOnline.OData.ExchangeManagementScopeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ExchangeManagementScopeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ExchangeManagementScope> _source,
            string id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "id", id }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.ExchangeManagementScopeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignments as global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignments> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignments as global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignments> _source,
            string id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "id", id }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.RoleAssignmentsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.SecurityPrincipal as global::AdminApiClient.For.ExchangeOnline.OData.SecurityPrincipalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.SecurityPrincipalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.SecurityPrincipal> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.SecurityPrincipalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.SecurityPrincipal as global::AdminApiClient.For.ExchangeOnline.OData.SecurityPrincipalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.SecurityPrincipalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.SecurityPrincipal> _source,
            string id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.SecurityPrincipalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterPolicyPresentation as global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterPolicyPresentationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterPolicyPresentationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterPolicyPresentation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterPolicyPresentationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterPolicyPresentation as global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterPolicyPresentationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterPolicyPresentationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterPolicyPresentation> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterPolicyPresentationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishPolicyPresentation as global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishPolicyPresentationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishPolicyPresentationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishPolicyPresentation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishPolicyPresentationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishPolicyPresentation as global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishPolicyPresentationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishPolicyPresentationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishPolicyPresentation> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishPolicyPresentationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterPolicy as global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterPolicy as global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterPolicy> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentPolicy as global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentPolicy as global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentPolicy> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksPolicyPresentation as global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksPolicyPresentationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksPolicyPresentationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksPolicyPresentation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksPolicyPresentationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksPolicyPresentation as global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksPolicyPresentationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksPolicyPresentationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksPolicyPresentation> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksPolicyPresentationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterRule as global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterRule as global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterRule> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.HostedContentFilterRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishRule as global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishRule as global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishRule> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.AntiPhishRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterRule as global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterRule as global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterRule> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.MalwareFilterRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentRule as global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentRule as global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentRule> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.SafeAttachmentRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksRule as global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksRule as global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksRule> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.SafeLinksRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ConfigAnalyzerPolicyRecommendation as global::AdminApiClient.For.ExchangeOnline.OData.ConfigAnalyzerPolicyRecommendationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ConfigAnalyzerPolicyRecommendationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ConfigAnalyzerPolicyRecommendation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.ConfigAnalyzerPolicyRecommendationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ConfigAnalyzerPolicyRecommendation as global::AdminApiClient.For.ExchangeOnline.OData.ConfigAnalyzerPolicyRecommendationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ConfigAnalyzerPolicyRecommendationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ConfigAnalyzerPolicyRecommendation> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.ConfigAnalyzerPolicyRecommendationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.AtpPolicyForO365Presentation as global::AdminApiClient.For.ExchangeOnline.OData.AtpPolicyForO365PresentationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.AtpPolicyForO365PresentationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.AtpPolicyForO365Presentation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.AtpPolicyForO365PresentationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.AtpPolicyForO365Presentation as global::AdminApiClient.For.ExchangeOnline.OData.AtpPolicyForO365PresentationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.AtpPolicyForO365PresentationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.AtpPolicyForO365Presentation> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.AtpPolicyForO365PresentationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupMember as global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupMemberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupMemberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupMember> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupMemberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupMember as global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupMemberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupMemberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupMember> _source,
            string id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "id", id }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupMemberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroup as global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroup as global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="exchangeObjectId">The value of exchangeObjectId</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroup> _source,
            string exchangeObjectId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "exchangeObjectId", exchangeObjectId }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.EligibleDistributionGroup as global::AdminApiClient.For.ExchangeOnline.OData.EligibleDistributionGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.EligibleDistributionGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.EligibleDistributionGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.EligibleDistributionGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.EligibleDistributionGroup as global::AdminApiClient.For.ExchangeOnline.OData.EligibleDistributionGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identity">The value of identity</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.EligibleDistributionGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.EligibleDistributionGroup> _source,
            string identity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Identity", identity }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.EligibleDistributionGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.DynamicDistributionGroup as global::AdminApiClient.For.ExchangeOnline.OData.DynamicDistributionGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.DynamicDistributionGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.DynamicDistributionGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.DynamicDistributionGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.DynamicDistributionGroup as global::AdminApiClient.For.ExchangeOnline.OData.DynamicDistributionGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.DynamicDistributionGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.DynamicDistributionGroup> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.DynamicDistributionGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncOrganizationSettings as global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncOrganizationSettingsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncOrganizationSettingsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncOrganizationSettings> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncOrganizationSettingsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncOrganizationSettings as global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncOrganizationSettingsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncOrganizationSettingsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncOrganizationSettings> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncOrganizationSettingsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.UnifiedGroup as global::AdminApiClient.For.ExchangeOnline.OData.UnifiedGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.UnifiedGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.UnifiedGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.UnifiedGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.UnifiedGroup as global::AdminApiClient.For.ExchangeOnline.OData.UnifiedGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.UnifiedGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.UnifiedGroup> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.UnifiedGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceMailboxPolicy as global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceMailboxPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceMailboxPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceMailboxPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceMailboxPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceMailboxPolicy as global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceMailboxPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceMailboxPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceMailboxPolicy> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceMailboxPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceAccessRule as global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceAccessRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceAccessRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceAccessRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceAccessRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceAccessRule as global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceAccessRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceAccessRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceAccessRule> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceAccessRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceClass as global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceClassSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceClassSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceClass> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceClassSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceClass as global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceClassSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceClassSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceClass> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.ActiveSyncDeviceClassSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.DirectMobileDevice as global::AdminApiClient.For.ExchangeOnline.OData.DirectMobileDeviceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.DirectMobileDeviceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.DirectMobileDevice> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.DirectMobileDeviceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.DirectMobileDevice as global::AdminApiClient.For.ExchangeOnline.OData.DirectMobileDeviceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.DirectMobileDeviceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.DirectMobileDevice> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.DirectMobileDeviceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.Divergence as global::AdminApiClient.For.ExchangeOnline.OData.DivergenceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.DivergenceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Divergence> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::AdminApiClient.For.ExchangeOnline.OData.DivergenceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::AdminApiClient.For.ExchangeOnline.OData.Divergence as global::AdminApiClient.For.ExchangeOnline.OData.DivergenceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="objectId">The value of objectId</param>
        public static global::AdminApiClient.For.ExchangeOnline.OData.DivergenceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Divergence> _source,
            string objectId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ObjectId", objectId }
            };
            return new global::AdminApiClient.For.ExchangeOnline.OData.DivergenceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// There are no comments for GetMobileDeviceStatistics in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetMobileDeviceStatistics")]
        public static global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceStatistics> GetMobileDeviceStatistics(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MobileDevice> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuery<global::AdminApiClient.For.ExchangeOnline.OData.MobileDeviceStatistics>("Exchange.GetMobileDeviceStatistics", false);
        }
        /// <summary>
        /// There are no comments for GetMailboxStatistics in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetMailboxStatistics")]
        public static global::Microsoft.OData.Client.DataServiceQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.MailboxStatistics> GetMailboxStatistics(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.Mailbox> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.MailboxStatistics>("Exchange.GetMailboxStatistics", false);
        }
        /// <summary>
        /// There are no comments for GetMailboxStatisticsV2 in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetMailboxStatisticsV2")]
        public static global::Microsoft.OData.Client.DataServiceQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.MailboxStatistics> GetMailboxStatisticsV2(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Mailbox> _source, global::System.Guid mailboxGuid, global::System.Guid databaseGuid)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.MailboxStatistics>("Exchange.GetMailboxStatisticsV2", false, new global::Microsoft.OData.Client.UriOperationParameter("mailboxGuid", mailboxGuid),
                    new global::Microsoft.OData.Client.UriOperationParameter("databaseGuid", databaseGuid));
        }
        /// <summary>
        /// There are no comments for GetMailboxFolderStatistics in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetMailboxFolderStatistics")]
        public static global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderStatistics> GetMailboxFolderStatistics(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolder> _source, global::System.Nullable<global::AdminApiClient.For.ExchangeOnline.OData.ElcFolderType> folderscope)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxFolderStatistics>("Exchange.GetMailboxFolderStatistics", false, new global::Microsoft.OData.Client.UriOperationParameter("folderscope", folderscope));
        }
        /// <summary>
        /// There are no comments for BySmtpAddress in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("BySmtpAddress")]
        public static global::AdminApiClient.For.ExchangeOnline.OData.CasMailboxSingle BySmtpAddress(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.CasMailbox> _source, string SmtpAddress)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::AdminApiClient.For.ExchangeOnline.OData.CasMailboxSingle(_source.CreateFunctionQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.CasMailbox>("Exchange.BySmtpAddress", false, new global::Microsoft.OData.Client.UriOperationParameter("SmtpAddress", SmtpAddress)));
        }
        /// <summary>
        /// There are no comments for BySmtpAddress in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("BySmtpAddress")]
        public static global::AdminApiClient.For.ExchangeOnline.OData.RecipientSingle BySmtpAddress(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Recipient> _source, string SmtpAddress)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::AdminApiClient.For.ExchangeOnline.OData.RecipientSingle(_source.CreateFunctionQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.Recipient>("Exchange.BySmtpAddress", false, new global::Microsoft.OData.Client.UriOperationParameter("SmtpAddress", SmtpAddress)));
        }
        /// <summary>
        /// There are no comments for GetRecipientPermissionByFilters in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetRecipientPermissionByFilters")]
        public static global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Recipient> GetRecipientPermissionByFilters(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Recipient> _source, string identity, string trustee, global::System.Collections.Generic.ICollection<global::AdminApiClient.For.ExchangeOnline.OData.RecipientAccessRight> accessRights)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuery<global::AdminApiClient.For.ExchangeOnline.OData.Recipient>("Exchange.GetRecipientPermissionByFilters", false, new global::Microsoft.OData.Client.UriOperationParameter("identity", identity),
                    new global::Microsoft.OData.Client.UriOperationParameter("trustee", trustee),
                    new global::Microsoft.OData.Client.UriOperationParameter("accessRights", accessRights));
        }
        /// <summary>
        /// There are no comments for UpdateMailboxArchive in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("UpdateMailboxArchive")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery UpdateMailboxArchive(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.Mailbox> _source, bool archive)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Exchange.UpdateMailboxArchive"), new global::Microsoft.OData.Client.BodyOperationParameter("archive", archive));
        }
        /// <summary>
        /// There are no comments for GetRecoverableItems in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetRecoverableItems")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItem> GetRecoverableItems(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Mailbox> _source, global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItemsQuery value)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItem>(_source.Context, _source.AppendRequestUri("Exchange.GetRecoverableItems"), new global::Microsoft.OData.Client.BodyOperationParameter("value", value));
        }
        /// <summary>
        /// There are no comments for RestoreRecoverableItems in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("RestoreRecoverableItems")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItem> RestoreRecoverableItems(this global::Microsoft.OData.Client.DataServiceQuery<global::AdminApiClient.For.ExchangeOnline.OData.Mailbox> _source, global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItemsQuery value)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<global::AdminApiClient.For.ExchangeOnline.OData.MailboxRecoverableItem>(_source.Context, _source.AppendRequestUri("Exchange.RestoreRecoverableItems"), new global::Microsoft.OData.Client.BodyOperationParameter("value", value));
        }
        /// <summary>
        /// There are no comments for ValidateOutboundConnector in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("ValidateOutboundConnector")]
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnectorValidationResult> ValidateOutboundConnector(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnector> _source, global::System.Collections.Generic.ICollection<string> recipients)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.OutboundConnectorValidationResult>(_source.Context, _source.AppendRequestUri("Exchange.ValidateOutboundConnector"), new global::Microsoft.OData.Client.BodyOperationParameter("recipients", recipients));
        }
        /// <summary>
        /// There are no comments for DeleteGroup in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("DeleteGroup")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery DeleteGroup(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroup> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Exchange.DeleteGroup"));
        }
        /// <summary>
        /// There are no comments for DeleteGroupMember in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("DeleteGroupMember")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery DeleteGroupMember(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.GraphConnectorGroup> _source, string graphConnectorGroupMemberId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Exchange.DeleteGroupMember"), new global::Microsoft.OData.Client.BodyOperationParameter("graphConnectorGroupMemberId", graphConnectorGroupMemberId));
        }
        /// <summary>
        /// There are no comments for UpgradeDistributionGroup in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("UpgradeDistributionGroup")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery UpgradeDistributionGroup(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.EligibleDistributionGroup> _source, string DlIdentities)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Exchange.UpgradeDistributionGroup"), new global::Microsoft.OData.Client.BodyOperationParameter("DlIdentities", DlIdentities));
        }
        /// <summary>
        /// There are no comments for ClearMobileDevice in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("ClearMobileDevice")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery ClearMobileDevice(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::AdminApiClient.For.ExchangeOnline.OData.DirectMobileDevice> _source, global::System.Nullable<bool> cancel)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Exchange.ClearMobileDevice"), new global::Microsoft.OData.Client.BodyOperationParameter("cancel", cancel));
        }
    }
}
